" Configuration file for vim
set nocompatible
filetype off

" Using Vundle: https://github.com/gmarik/Vundle.vim
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Core
Plugin 'gmarik/vundle'

set number
" Prevent modelines in files from being evaluated (avoids a potential
" security problem wherein a malicious user could write a hazardous
" modeline into a file) (override default value of 5)
set modelines=0

" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
" TEST
set nocompatible	" Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start	" more powerful backspacing

set background=dark
set cpoptions=aABceFsmq
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]

" Indent
set ai
set si
set et
" " set sw=4
" " set ts=4

" Now we set some defaults for the editor
" set autoindent		" always set autoindenting on
set textwidth=0		" Don't wrap words by default
set nobackup		" Don't keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more than
			" 50 lines of registers
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" We know xterm-debian is a color terminal
if &term =~ "xterm-debian" || &term =~ "xterm-xfree86"
  set t_Co=16
  set t_Sf=%dm
  set t_Sb=%dm
endif

" Make p in Visual mode replace the selected text with the "" register.
vnoremap p <Esc>:let current_reg = @"<CR>gvdi<C-R>=current_reg<CR><Esc>

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
syntax on

" Remember last line pos when re-opening an edited file
set viminfo='10,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" Debian uses compressed helpfiles. We must inform vim that the main
" helpfiles is compressed. Other helpfiles are stated in the tags-file.
"set helpfile=$VIMRUNTIME/doc/help.txt.gz

if has("autocmd")
 " Enabled file type detection
 " Use the default filetype settings. If you also want to load indent files
 " to automatically do language-dependent indenting add 'indent' as well.
 filetype plugin on

endif " has ("autocmd")

" Some Debian-specific things
augroup filetype
  au BufNewFile,BufRead *.mm    set ft=perl
  au BufRead reportbug.*		set ft=mail
  au BufRead reportbug-*		set ft=mail
augroup END

" The following are commented out as they cause vim to behave a lot
" different from regular vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set incsearch		" Incremental search
set autowrite		" Automatically save before commands like :next and :make
set hlsearch

" make ending xml tag
map <F2> 0v/\s*[<a-zA-Z0-9:\-_]*<return>hyo<esc>pa><esc>^a/<esc>

" less style searches
map \ /<return>

" some autokeys
map <F3> :set noignorecase<return>
map <F4> :set ignorecase<return>

" dupe tag and make an ending tag
map <F5> GVgg:!mkvixml<return>

" run mikes mkxml command externally to clean up
map <F9> :!mkvixml<return>

" set tabbing and backspacing of multiline selects
map <tab> > gv
map <backspace> < gv

" tabspacing 2 
set ts=2
set sts=2
set smartindent
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set smarttab

" a better way to see comments
hi Comment  term=bold ctermfg=5 guifg=#80a0ff

" allow auto completion for colons in class names in Perl
set iskeyword+=:

" perltidy
map ,pt <ESC>:'<,'>!perltidy -boc --paren-tightness=2 --entab-leading-whitespace=4 -mft=1<CR>

" remove line breaks (used for extra line breaks that get added when cutting&pasting xml into vi)
map ,rl <ESC>:%s/\n//<CR>

" call formatxml to run xmllint --format without having to actually save a file!
map ,fx <ESC>:%!formatxml<CR>
command Date !date
map ,da <ESC>:Date<CR>
